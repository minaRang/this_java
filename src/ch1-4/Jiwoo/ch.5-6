기본형과 참조형 타입에 대해 설명해주세요.
-> 기본 타입으로 선언된 변수는 값 자체를 저장하고, 참조 타입으로 선언된 변수는
 객체가 생성된 메모리 번지를 저장한다. 
2. 싱글톤에 대해 설명해주세요.
->앱 전체에서 단 한 개의 객체만 생성해서 사용하게 하고 싶을 때 적용
생성자의 접근제한자를 private으로 두어 외부에서 new연산자로 생성자를 호출할 수 없도록 막는 것
3. 오버로딩과 오버라이딩에 대해 설명해주세요.
생성자 오버로딩 : 매개변수를 달리하는 생성자를 여러개 선언하는 것
메소드 오버로딩 : 메소드 이름은 같지만 매개변수의 타입,개수,순서가 다른 메소드를 여러개 선언하는 것

4. public, protected, default, private에 대해 설명해주세요.
public : 클래스,필드,생성자,메소드(대상) 제한 범위 : 없음
protected : 필드, 생성자, 메소드 / 같은 패키지이거나 자식 객체만 사용 가능
default : 클래스,필드,생성자,메소드/같은 패키지
private : 필드,생성자,메소드 / 객체 내부 
5. 인스턴스 멤버와 정적 멤버에 대해 설명해주세요.
->인스턴스 멤버 : 객체를 생성해야만 사용할 수 있는 멤버(객체에 소속)
->정적 멤버 : 클래스에 고정된 멤버(객체 없이도 사용할 수 있는 멤버)



1. JVM의 메모리 영역에 대해 설명해주세요.
->JVM의 메모리 영역은 메소드 영역, 힙 영역, 스택 영역으로 구성되어 있음
(메소드 영역 : 바이트코드 파일의 내용이 저장되는 영역
 힙 영역 : 객체가 생성되는 영역
 스택 영역 : 메소드를 호출할 때마다 생성되는 프레임이 저장되는 영역)
2. String 객체 생성시, new연산자를 쓰면 같은 문자열이더라도 서로 다른 번지를 가진다.
    <br> 이떄 equals를 사용하여 비교하면 true가 나오는데, 그렇게 나올 수 있는 이유는?
    equlas는 객체를 따지지 않고 문자열이 같으면 true, 다르면 false를 리턴함.
3. static 키워드에 대해 설명해주세요.
4. this 키워드에 대해 설명해주세요.
->생성자와 메소드의 매개변수명이 인스턴스 멤버인 필드명과 동일한 경우 인스턴스 필드임을
강조하고자 할 때 사용


1.메모리 영역에 대해 설명하세요. 
(메소드 영역 : 바이트코드 파일의 내용이 저장되는 영역
 힙 영역 : 객체가 생성되는 영역
 스택 영역 : 메소드를 호출할 때마다 생성되는 프레임이 저장되는 영역)
2. 생성자에 대해 설명하세요. 
->new 연산자로 객체를 생성할 때 객체의 초기화 역할을 담당한다.
3. 정적 맴버에 대해 설명하세요. 
->정적 멤버 : 클래스에 고정된 멤버(객체 없이도 사용할 수 있는 멤버)
4. 접근 제한자에 대해 설명하세요. 
->중요 필드 메소드가 외부로 노출되는 걸 막아 객체 무결성을을 유지하기 위해 사용되는 것
5. 싱글톤 패턴에 대해 설명하세요. 

1. 객체는 메모리상 어디에 생성되는가, 또 어떻게 메모리를 해제하는가 
->힙 영역. 객체의 모든 참조를 없애는 것?
2. Call by value 와 Call by Reference 차이, 자바의 call by reference
3. 자바에서 파라미터로 객체를 넘기는 것은 Call by Reference인가
4. 객체지향의 특징 중 캡슐화와 은닉성에 대해 설명하시오.
->멤버변수나 메서드가 객체에 노출되지 않도록 설정하는 기법
->객체의 필드와 메소드를 하나로 묶고 실제 구현 내용을 외부에 감추는 것(외부의 잘못된 사용으로
객체가 손상되는 걸 막도록 함)

1. nullPointerException은 언제 발생하는지 설명해주세요.
->NullPointerException : 변수가 null인 상태에서 객체의 데이터나 메소드를 사용하려 할 때 예외 발생.
2. 배열 변수를 선언한 시점과 값을 대입하는 시점이 다를 시 
값을 대입하는 법을 설명해주세요.
->new 타입{값들}
3. 캡슐화에 대해 설명해주세요.
->객체의 필드와 메소드를 하나로 묶고 실제 구현 내용을 외부에 감추는 것(외부의 잘못된 사용으로
객체가 손상되는 걸 막도록 함) 
4. 라이브러리 클래스와 실행 클래스에 대해 설명해주세요.
->라이브러리 클래스 : 실행할 수 없으며 다른 클래스에서 이용하는 클래스에
-> 실행 클래스 : 메인 메소드를 가지고 있는 실행 가능한 클래스
5. getter와 setter에 대해 설명해주세요.
 데이터 자체는 외부에서 접근을 할 수 없도록 하고, 메소드만 공개해서 유효한 값들만 데이터로 저장한다.
즉, 객체들이 데이터(필드)를 외부에서 직접적으로 접근하는 것을 막아놓기 위함이다.
필드들은 private 접근 제한자로 막아두고, 각 필드의 Getter & Setter로 접근하는 방식을 취하는데, 
이는 클래스의 특성 중 하나인 정보 은닉을 잘 보여준다.


